ifndef WORKER
	WORKER="ca"
endif
WORKER_FILE="./build/index.js"

deploy: build
ifeq ($(TOKEN),)
	@echo "Error: TOKEN environment variable is not found" >&2 && exit 1
endif
ifeq ($(FINGERPRINT),)
	@echo "Error: FINGERPRINT environment variable is not found" >&2 && exit 1
endif
ifeq ($(CA_URL),)
	@echo "Error: CA_URL environment variable is not found" >&2 && exit 1
endif
	@poetry run python -m CAWorker \
		--token "$(TOKEN)" \
		--worker "$(WORKER)" \
		--location "$(WORKER_FILE)" \
		--fingerprint "$(FINGERPRINT)" \
		--ca-url "$(CA_URL)"

build: clean ./worker/index.html ./worker/worker.js
	@mkdir -p ./build 
	@echo "/* This is an auto generated file. Do not edit this file */\n" > $(WORKER_FILE)
	@sed -e '1i\'$$'\n''function get_html() { return \`'  -e '$$a\'$$'\n''\`}' ./worker/index.html >> $(WORKER_FILE)
	@cat ./worker/worker.js >> $(WORKER_FILE)

clean:
	@rm -rf build/
	@find . -type d -name *pycache* -exec rm -rf {} +

install: pyproject.toml
	@pip install poetry --user
	@poetry install

.PHONY: clean build deploy install